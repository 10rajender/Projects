{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/services/viewservice.service.ts","webpack:///./src/app/todolist/todolist.component.css","webpack:///./src/app/todolist/todolist.component.html","webpack:///./src/app/todolist/todolist.component.ts","webpack:///./src/app/todos/todos.component.css","webpack:///./src/app/todos/todos.component.html","webpack:///./src/app/todos/todos.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,8BAA8B,qBAAqB,GAAG,G;;;;;;;;;;;ACAtD,8C;;;;;;;;;;;;;;;;;;;;;;;;ACA8D;AAS9D;IAGA;IAAe,CAAC;IAEhB,+BAAQ,GAAR;IAEA,CAAC;IAPY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;;OACW,YAAY,CAYxB;IAAD,mBAAC;CAAA;AAZwB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTiC;AACjB;AAGM;AACU;AACZ;AACqB;AAelE;IAAA;IAAyB,CAAC;IAAb,SAAS;QAbrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,qEAAc;gBACd,8EAAiB;aAClB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;aACZ;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;ACtBqB;AAK3C;IAEE;QACA,aAAQ,GAAkB,EAAE,CAAC;IADb,CAAC;IAFN,kBAAkB;QAH9B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,kBAAkB,CAuB9B;IAAD,yBAAC;CAAA;AAvB8B;;;;;;;;;;;;ACL/B,qDAAqD,qBAAqB,yBAAyB,yBAAyB,sBAAsB,sBAAsB,gCAAgC,6BAA6B,4BAA4B,wBAAwB,KAAK,mEAAmE,yBAAyB,iBAAiB,sBAAsB,gBAAgB,eAAe,KAAK,kDAAkD,yBAAyB,aAAa,cAAc,mBAAmB,kBAAkB,6BAA6B,KAAK,6FAA6F,6BAA6B,KAAK,wGAAwG,gCAAgC,KAAK,wFAAwF,oBAAoB,yBAAyB,oBAAoB,KAAK,0FAA0F,qBAAqB,KAAK,wEAAwE,gBAAgB,eAAe,iBAAiB,mBAAmB,0BAA0B,gCAAgC,uCAAuC,+BAA+B,KAAK,eAAe,yBAAyB,oBAAoB,KAAK,K;;;;;;;;;;;ACAj+C,kJAAkJ,wNAAwN,sCAAsC,4CAA4C,iBAAiB,KAAK,QAAQ,oYAAoY,mH;;;;;;;;;;;;;;;;;;;;;;;;;ACA/wB;AAEX;AAOpE;IACE,2BAAqB,kBAAuC;QAAvC,uBAAkB,GAAlB,kBAAkB,CAAqB;QACnD,cAAS,GAAkB,EAAE,CAAC;QACvC,aAAQ,GAAkB,EAAE,CAAC;QACnB,iBAAY,GAGjB,IAAI,0DAAY,EAAE,CAAC;IANuC,CAAC;IAOhE,oCAAQ,GAAR;IAEA,CAAC;IAED,kCAAM,GAAN,UAAO,KAAa;QAClB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;YACrB,WAAW,EAAE,KAAK;YAClB,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,IAAI;SACxC,CAAC,CAAC;IACL,CAAC;IAED,+BAA+B;IAE/B,oCAAQ,GAAR,UAAU,KAAa;QACrB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAClC,CAAC;IAGD,oCAAQ,GAAR,UAAS,IAAa;QACpB,EAAE,EAAC,IAAI,CAAC,EAAC;YACP,MAAM,CAAC,cAAc,CAAC;QACxB,CAAC;QACD,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IAED,2CAA2C;IAC3C,0CAAc,GAAd;QAAA,iBASC;QARC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAC,OAAO,EAAE,KAAK;YACpC,EAAE,EAAC,CAAC,OAAO,CAAC,OAAO,CAAC,EAAC;gBACnB,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC9B,CAAC;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC/B,IAAI,CAAC,kBAAkB,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;IACpD,CAAC;IAzCQ;QAAR,2DAAK,EAAE;;wDAA+B;IAE7B;QAAT,4DAAM,EAAE;kCAAe,0DAAY;2DAGZ;IAPb,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAE0C,gFAAkB;OADjD,iBAAiB,CA4C7B;IAAD,wBAAC;CAAA;AA5C6B;;;;;;;;;;;;ACT9B,4BAA4B,uBAAuB,6BAA6B,yBAAyB,mFAAmF,KAAK,oBAAoB,mCAAmC,8BAA8B,uCAAuC,oDAAoD,KAAK,iBAAiB,8BAA8B,oCAAoC,KAAK,qBAAqB,yBAAyB,kBAAkB,kBAAkB,uBAAuB,uBAAuB,yBAAyB,qCAAqC,iDAAiD,8CAA8C,yCAAyC,KAAK,0BAA0B,yBAAyB,gBAAgB,kBAAkB,sBAAsB,2BAA2B,2BAA2B,yBAAyB,gBAAgB,qBAAqB,mBAAmB,6BAA6B,wDAAwD,6BAA6B,0CAA0C,yCAAyC,KAAK,eAAe,yBAAyB,iBAAiB,oCAAoC,KAAK,K;;;;;;;;;;;ACAvzC,kqB;;;;;;;;;;;;;;;;;;;;;;;;;ACAiD;AAEmB;AAMpE;IAEE,wBAAqB,kBAAsC;QAAtC,uBAAkB,GAAlB,kBAAkB,CAAoB;QAG3D,aAAQ,GAAG,KAAK,CAAC;QAEjB,UAAK,GAAkB,EAAE,CAAC;IALqC,CAAC;IAMhE,iCAAQ,GAAR;IACA,CAAC;IAEH,0BAA0B;IAExB,8BAAK,GAAL,UAAM,KAAa;QACjB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC;QAC9C,EAAE,EAAC,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC,EAAC;YACrB,EAAE,EAAC,IAAI,CAAC,QAAQ,CAAC,EAAC;gBAChB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,IAAI,GAAG,KAAK,CAAC;gBAC3C,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,OAAO,GAAG,KAAK,CAAC;gBAC9C,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACxB,CAAC;YACD,IAAI,CAAC,CAAC;gBACJ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAC,CAAC,CAAC;YACjD,CAAC;QACH,CAAC;QACD,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IACpB,CAAC;IAGD,yBAAyB;IACzB,iCAAQ,GAAR,UAAS,KAAU;QACjB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,WAAW,CAAC;QACjC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,WAAW,CAAC;IACxC,CAAC;IAlCU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAGyC,gFAAkB;OAFhD,cAAc,CAoC1B;IAAD,qBAAC;CAAA;AApC0B;;;;;;;;;;;;;ACR3B;AAAA;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;ACdnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".container {\\n  margin-top: 30px;\\n}\\n\"","module.exports = \"<app-todos></app-todos>\\n\\n\"","import { Component, ElementRef, OnInit } from '@angular/core';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n\nconstructor() {}\n\nngOnInit() {\n\n}\n\n\n\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n\nimport { AppComponent } from './app.component';\nimport { TodosComponent } from './todos/todos.component';\nimport { FormsModule } from '@angular/forms';\nimport { TodolistComponent } from './todolist/todolist.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TodosComponent,\n    TodolistComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { todoElement } from \"../todoElement.model\"\n@Injectable({\n  providedIn: 'root'\n})\nexport class ViewserviceService {\n\n  constructor() { }\n  viewList: todoElement[] = [];\n  // activeList: todoElement[];\n  // completedList: todoElement[];\n\n  // getActive(input: todoElement[]){\n  //   input.forEach((element, index) => {\n  //     if(!element.checked){\n  //       input.splice(index,1);\n  //     }\n  //   });\n  //   return input;\n  // }\n  // getCompleted(input: todoElement[]){\n  //   input.forEach((element, index) => {\n  //     if(element.checked){\n  //       input.splice(index,1);\n  //     }\n  //   });\n  //   return input;\n  // }\n}\n","module.exports = \"/* The container */\\r\\n.container {\\r\\n  display: block;\\r\\n  position: relative;\\r\\n  padding-left: 35px;\\r\\n  cursor: pointer;\\r\\n  font-size: 22px;\\r\\n  -webkit-user-select: none;\\r\\n  -moz-user-select: none;\\r\\n  -ms-user-select: none;\\r\\n  user-select: none;\\r\\n}\\r\\n/* Hide the browser's default checkbox */\\r\\n.container input {\\r\\n  position: absolute;\\r\\n  opacity: 0;\\r\\n  cursor: pointer;\\r\\n  height: 0;\\r\\n  width: 0;\\r\\n}\\r\\n/* Create a custom checkbox */\\r\\n.checkmark {\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  height: 25px;\\r\\n  width: 25px;\\r\\n  background-color: #eee;\\r\\n}\\r\\n/* On mouse-over, add a grey background color */\\r\\n.container:hover input ~ .checkmark {\\r\\n  background-color: #ccc;\\r\\n}\\r\\n/* When the checkbox is checked, add a blue background */\\r\\n.container input:checked ~ .checkmark {\\r\\n  background-color: #2196F3;\\r\\n}\\r\\n/* Create the checkmark/indicator (hidden when not checked) */\\r\\n.checkmark:after {\\r\\n  content: \\\"\\\";\\r\\n  position: absolute;\\r\\n  display: none;\\r\\n}\\r\\n/* Show the checkmark when checked */\\r\\n.container input:checked ~ .checkmark:after {\\r\\n  display: block;\\r\\n}\\r\\n/* Style the checkmark/indicator */\\r\\n.container .checkmark:after {\\r\\n  left: 9px;\\r\\n  top: 5px;\\r\\n  width: 5px;\\r\\n  height: 10px;\\r\\n  border: solid white;\\r\\n  border-width: 0 3px 3px 0;\\r\\n  -webkit-transform: rotate(45deg);\\r\\n  transform: rotate(45deg);\\r\\n}\\r\\n.btnnalign{\\r\\n  position: absolute;\\r\\n    right: 10px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"col-sm-7\\\">\\n  <ul class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item listalign \\\" *ngFor=\\\"let x of inputList; let i= index\\\">\\n      <label class=\\\"container\\\">\\n        <input type=\\\"checkbox\\\" [(ngModel)]=\\\"x.checked\\\" checked=\\\"checked\\\">\\n        <span class=\\\"checkmark\\\"></span>\\n        <label #labelName [ngStyle]=\\\"{'text-decoration':getStyle(x.checked)}\\\"\\n          style=\\\"word-break: break-all; max-width:170px;\\\">{{x.name}}</label>\\n        <span class=\\\"btnnalign\\\"><button type=\\\"button\\\" class=\\\"btn btn-info btnalign\\\" (click)=\\\"onEdit(i)\\\">Edit</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger btnalgn\\\" (click)=\\\"onDelete(i)\\\">Delete</button>\\n        </span>\\n      </label>\\n    </li>\\n  </ul>\\n  <div>\\n    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" style=\\\"margin-left: 515px;\\\" (click)=\\\"clearCompleted() \\\"\\n      *ngIf=\\\"inputList.length!=0\\\">Clear Completed</button>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\nimport { todoElement } from \"../todoElement.model\"\nimport { ViewserviceService } from \"../services/viewservice.service\"\n\n@Component({\n  selector: \"app-todolist\",\n  templateUrl: \"./todolist.component.html\",\n  styleUrls: [\"./todolist.component.css\"]\n})\nexport class TodolistComponent implements OnInit {\n  constructor( private viewserviceService : ViewserviceService) {}\n  @Input() inputList: todoElement[] = [];\n  tempList: todoElement[] = [];\n  @Output() newtodoValue: EventEmitter<{\n    editedIndex: number;\n    editedValue: string;\n  }> = new EventEmitter();\n  ngOnInit() {\n\n  }\n\n  onEdit(index: number) {\n    this.newtodoValue.emit({\n      editedIndex: index,\n      editedValue: this.inputList[index].name\n    });\n  }\n\n  //To delete the item from todos\n\n  onDelete (index: number) {\n    this.inputList.splice(index, 1);\n  }\n\n\n  getStyle(flag: boolean){\n    if(flag){\n      return \"line-through\";\n    }\n    return \"none\";\n  }\n\n  //To clear the checked items from the todos\n  clearCompleted(){\n    this.tempList = [];\n    this.inputList.forEach((element, index) => {\n      if(!element.checked){\n        this.tempList.push(element);\n      }\n    });\n    this.inputList = this.tempList;\n    this.viewserviceService.viewList = this.inputList;\n  }\n}\n","module.exports = \".todoapp {\\r\\n  background: #fff;\\r\\n  margin: 130px 0 40px 0;\\r\\n  position: relative;\\r\\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.2), 0 25px 50px 0 rgba(0, 0, 0, 0.1);\\r\\n}\\r\\n\\r\\n.new-todo  {\\r\\n  padding: 16px 16px 16px 60px;\\r\\n  border: none !important;\\r\\n  background: rgba(0, 0, 0, 0.003);\\r\\n  box-shadow: inset 0 -2px 1px rgba(0,0,0,0.03);\\r\\n}\\r\\n\\r\\n.txtalgn{\\r\\n  width: 400px !important;\\r\\n  margin-left: 529px !important;\\r\\n}\\r\\n\\r\\n.todoapp h1 {\\r\\n  position: absolute;\\r\\n  top: -155px;\\r\\n  width: 100%;\\r\\n  font-size: 100px;\\r\\n  font-weight: 100;\\r\\n  text-align: center;\\r\\n  color: rgba(175, 47, 47, 0.15);\\r\\n  -webkit-text-rendering: optimizeLegibility;\\r\\n  -moz-text-rendering: optimizeLegibility;\\r\\n  text-rendering: optimizeLegibility;\\r\\n}\\r\\n\\r\\n.new-todo, .edit {\\r\\n  position: relative;\\r\\n  margin: 0;\\r\\n  width: 100%;\\r\\n  font-size: 24px;\\r\\n  font-family: inherit;\\r\\n  font-weight: inherit;\\r\\n  line-height: 1.4em;\\r\\n  border: 0;\\r\\n  color: inherit;\\r\\n  padding: 6px;\\r\\n  border: 1px solid #999;\\r\\n  box-shadow: inset 0 -1px 5px 0 rgba(0, 0, 0, 0.2);\\r\\n  box-sizing: border-box;\\r\\n  -webkit-font-smoothing: antialiased;\\r\\n  -moz-osx-font-smoothing: grayscale;\\r\\n}\\r\\n\\r\\n.main {\\r\\n  position: relative;\\r\\n  z-index: 2;\\r\\n  border-top: 1px solid #e6e6e6;\\r\\n}\\r\\n\"","module.exports = \"<section class =\\\"todoapp\\\">\\n  <header class=\\\"header\\\">\\n\\n      <h1>todos</h1>\\n\\n          <input class=\\\"new-todo txtalgn\\\" placeholder=\\\"What needs to be done?\\\" name =\\\"newtodo\\\" [(ngModel)]=\\\"newtodo\\\"  #newtodo1 autofocus=\\\"\\\">\\n\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btnalgn\\\" *ngIf=\\\"!atUpdate\\\" (click)=\\\"onAdd(newtodo1.value)\\\" >Add\\n\\n          </button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-success btnalgn\\\" *ngIf=\\\"atUpdate\\\" (click)=\\\"onAdd(newtodo1.value)\\\">Update</button>\\n        <app-todolist [inputList] = input (newtodoValue)=\\\"onUpdate($event)\\\"></app-todolist>\\n\\n  </header>\\n\\n  </section>\\n\"","import { Component, OnInit} from '@angular/core';\nimport { todoElement } from \"../todoElement.model\"\nimport { ViewserviceService } from \"../services/viewservice.service\"\n@Component({\n  selector: 'app-todos',\n  templateUrl: './todos.component.html',\n  styleUrls: ['./todos.component.css']\n})\nexport class TodosComponent implements OnInit {\n\n  constructor( private viewserviceService: ViewserviceService) { }\n  newtodo;\n  value: string;\n  atUpdate = false;\n  currentIndex : number;\n  input: todoElement[] = [];\n  ngOnInit() {\n  }\n\n//To add new item to todos\n\n  onAdd(event: string) {\n    this.input = this.viewserviceService.viewList;\n    if(event.length !== 0){\n      if(this.atUpdate){\n        this.input[this.currentIndex].name = event;\n        this.input[this.currentIndex].checked = false;\n        this.atUpdate = false;\n      }\n      else {\n        this.input.push({name: event, checked: false});\n      }\n    }\n    this.newtodo = '';\n  }\n\n\n  //To update item to todos\n  onUpdate(value: any) {\n    this.newtodo = value.editedValue;\n    this.atUpdate = true;\n    this.currentIndex = value.editedIndex;\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}